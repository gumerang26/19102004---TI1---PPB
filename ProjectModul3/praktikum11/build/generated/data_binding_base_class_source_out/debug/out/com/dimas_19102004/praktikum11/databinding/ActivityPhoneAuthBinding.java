// Generated by view binder compiler. Do not edit!
package com.dimas_19102004.praktikum11.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dimas_19102004.praktikum11.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhoneAuthBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnContinue;

  @NonNull
  public final Button btnResend;

  @NonNull
  public final Button btnVerify;

  @NonNull
  public final EditText inputNumber;

  @NonNull
  public final EditText inputVerifyCode;

  @NonNull
  public final ImageView ivIcon;

  @NonNull
  public final TextView tv62;

  @NonNull
  public final TextView tvSignIn;

  private ActivityPhoneAuthBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnContinue,
      @NonNull Button btnResend, @NonNull Button btnVerify, @NonNull EditText inputNumber,
      @NonNull EditText inputVerifyCode, @NonNull ImageView ivIcon, @NonNull TextView tv62,
      @NonNull TextView tvSignIn) {
    this.rootView = rootView;
    this.btnContinue = btnContinue;
    this.btnResend = btnResend;
    this.btnVerify = btnVerify;
    this.inputNumber = inputNumber;
    this.inputVerifyCode = inputVerifyCode;
    this.ivIcon = ivIcon;
    this.tv62 = tv62;
    this.tvSignIn = tvSignIn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhoneAuthBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhoneAuthBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_phone_auth, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhoneAuthBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnContinue;
      Button btnContinue = ViewBindings.findChildViewById(rootView, id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.btnResend;
      Button btnResend = ViewBindings.findChildViewById(rootView, id);
      if (btnResend == null) {
        break missingId;
      }

      id = R.id.btnVerify;
      Button btnVerify = ViewBindings.findChildViewById(rootView, id);
      if (btnVerify == null) {
        break missingId;
      }

      id = R.id.inputNumber;
      EditText inputNumber = ViewBindings.findChildViewById(rootView, id);
      if (inputNumber == null) {
        break missingId;
      }

      id = R.id.inputVerifyCode;
      EditText inputVerifyCode = ViewBindings.findChildViewById(rootView, id);
      if (inputVerifyCode == null) {
        break missingId;
      }

      id = R.id.ivIcon;
      ImageView ivIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivIcon == null) {
        break missingId;
      }

      id = R.id.tv62;
      TextView tv62 = ViewBindings.findChildViewById(rootView, id);
      if (tv62 == null) {
        break missingId;
      }

      id = R.id.tvSignIn;
      TextView tvSignIn = ViewBindings.findChildViewById(rootView, id);
      if (tvSignIn == null) {
        break missingId;
      }

      return new ActivityPhoneAuthBinding((ConstraintLayout) rootView, btnContinue, btnResend,
          btnVerify, inputNumber, inputVerifyCode, ivIcon, tv62, tvSignIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
